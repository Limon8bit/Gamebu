"""
Django settings for blog project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
from django.template.backends import django
import logging

BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-p8dteh^@$*+h#l=q-2#kc%9@$-)i+j3d+6st3fj=9u7bgqj*55'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'debug_toolbar'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware'
]

ROOT_URLCONF = 'blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True
USE_L10N = True
USE_TZ = True

DATE_FORMAT = 'd E Y'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = BASE_DIR / 'static'
STATIC_URL = 'static/'

MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = 'media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'main.User'

INTERNAL_IPS = [
    '127.0.0.1'
]

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': BASE_DIR / 'cached_data',
    }
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'baserequests_formatter': {
            'format': '[{levelname}]{asctime}|{module}|PID:{process} TID:{thread}| '
                      'Username: {username} UserIP: {ip} PATH: [{path}]',
            'style': '{'
        },
        'posts_creating_formatter': {
            'format': '[{levelname}]{asctime}|{module}|PID:{process} TID:{thread}| '
                      'Username: {username} UserIP: {ip} PATH: [{path}] // {POST} | ',
            'style': '{'
        },
        'user_creating_formatter': {
            'format': '[{levelname}]{asctime}|{module}|PID:{process} TID:{thread}| '
                      ' UserIP: {ip} PATH: [{path}] // {POST} | ',
            'style': '{'
        },
        'user_activity_formatter': {
            'format': '[{levelname}]{asctime}|{module}|PID:{process} TID:{thread}| '
                      ' UserIP: {ip} PATH: [{path}]',
            'style': '{'
        },
    },
    'handlers': {
        'base_requests': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/main/base_requests.log',
            'formatter': 'baserequests_formatter',
        },
        'posts_creating': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/main/posts_creating.log',
            'formatter': 'posts_creating_formatter',
        },
        'user_creating': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/main/users_creating.log',
            'formatter': 'user_creating_formatter',
        },
        'user_activity': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs/main/users_activity.log',
            'formatter': 'user_activity_formatter',
        }
    },
    'loggers': {
        'main_base': {
            'handlers': ['base_requests'],
            'level': 'INFO',
        },
        'main_create_post': {
            'handlers': ['posts_creating'],
            'level': 'INFO'
        },
        'main_users_creating': {
            'handlers': ['user_creating'],
            'level': 'INFO'
        },
        'main_user_activity': {
            'handlers': ['user_activity'],
            'level': 'INFO'
        }
    }
}
